plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.3.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'software.bigbade'
version '1.0.0'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    //json.simple
    implementation 'com.github.cliftonlabs:json-simple:3.1.0'
    //JDA for Discord bots
    implementation('net.dv8tion:JDA:4.2.0_168') {
        exclude group: 'org.jetbrains', module: 'annotations'
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }

    //Logging
    implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    //Mocking
    testImplementation 'org.mockito:mockito-junit-jupiter:3.5.10'
    testImplementation 'org.mockito:mockito-inline:3.5.10'
    testImplementation 'org.mockito:mockito-core:3.5.10'

    //Annotations
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'
}

test {
    useJUnitPlatform()
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        //noinspection GroovyAssignabilityCheck
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    //noinspection GrUnresolvedAccess
    project*.test
}

shadowJar {
    archiveClassifier.set('')

    minimize()
}
